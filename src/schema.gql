# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cita {
  id: ID!
  motivo: String!
  fecha: String!
  horario: String!
  paciente: Paciente!
}

type Antropometria {
  id: ID!
  fecha: String!
  peso: Float!
  talla: Float!
  imc: Float!
  cintura: Float!
  cBrazo: Float!
  pTriceps: Float!
  pAbdominal: Float!
  porcentajeGrasa: String!
  paciente: Paciente!
}

type Laboratorial {
  id: ID!
  fecha: String!
  glucosa: Float!
  insulina: Float!
  trigliceridos: Float!
  colesterolTotal: Float!
  hdl: Float!
  ldl: Float!
  paciente: Paciente!
}

type Paciente {
  id: ID!
  nombre: String!
  nacimiento: String!
  sexo: validGenres!
  telefono: String!
  email: String!
  citas: [Cita!]!
  antropometricos: [Antropometria!]!
  laboratoriales: [Laboratorial!]!
}

enum validGenres {
  masculino
  fenemino
  otro
}

type Pago {
  id: ID!
  monto: Float!
  metodoPago: paymentMethod!
  tipoPago: paymentType!
  cantidadRecibida: Float!
  cambio: Float!
  cita: Cita!
}

enum paymentMethod {
  tarjeta
  efectivo
}

enum paymentType {
  primero
  posterior
}

type Personal {
  id: ID!
  nombre: String!
  telefono: String!
  email: String!
  rol: validRoles!
}

enum validRoles {
  recepcionista
  nutriologo
}

type HistorialClinico {
  id: ID!
  enfermedadesCardiovasculares: validResponse!
  enfermedadesPulmonares: validResponse!
  enfermedadesMetabolicas: validResponse!
  tabaquismo: validResponse!
  alcoholismo: validResponse!
  sedentarismo: validResponse!
  drogas: validResponse!
  cafe: validResponse!
  alimentacion: String
  paciente: Paciente!
}

enum validResponse {
  si
  no
}

type AuthResponse {
  token: String!
  personal: Personal!
}

type Query {
  pacientes(pageSize: Int = 5, page: Int!): [Paciente!]!
  paciente(id: ID!): Paciente!
  citas(pageSize: Int = 5, page: Int!): [Cita!]!
  cita(id: ID!): Cita!
  pagos(pageSize: Int = 5, page: Int!): [Pago!]!
  pago(id: ID!): Pago!
  pagoByCita(citaId: ID!): Pago!
  antropometricos(pageSize: Int = 5, page: Int!, pacienteId: ID!): [Antropometria!]!
  antropometrico(id: ID!): Antropometria!
  laboratoriales(pageSize: Int = 5, page: Int!, pacienteId: ID!): [Laboratorial!]!
  laboratorial(id: ID!): Laboratorial!
  historialesClinicos(pageSize: Int = 5, page: Int!): [HistorialClinico!]!
  historialClinico(pacienteId: ID!): HistorialClinico!
  recepcionistas(pageSize: Int = 5, page: Int!): [Personal!]!
  personal(id: ID!): Personal!
  profile: Personal!
}

type Mutation {
  addPaciente(record: CreatePacienteInput!): Paciente!
  updatePaciente(record: UpdatePacienteInput!): Paciente!
  removePaciente(id: ID!): Paciente!
  addCita(record: CreateCitaInput!): Cita!
  updateCita(record: UpdateCitaInput!): Cita!
  removeCita(id: ID!): Cita!
  addPago(record: CreatePagoInput!): Pago!
  addAntropometrico(record: CreateAntropometricoInput!): Antropometria!
  updateAntropometrico(record: UpdateAntropometricoInput!): Antropometria!
  addLaboratorial(record: CreateLaboratorialInput!): Laboratorial!
  updateLaboratorial(record: UpdateLaboratorialInput!): Laboratorial!
  addHistorial(record: CreateHistorialInput!): HistorialClinico!
  updateHistorial(record: UpdateHistorialInput!): HistorialClinico!
  updateProfile(record: UpdateProfileInput!): Personal!
  removePersonal(id: ID!): Personal!
  signup(record: SignUpInput!): AuthResponse!
  signin(record: SigninInput!): AuthResponse!
}

input CreatePacienteInput {
  nombre: String!
  email: String!
  telefono: String!
  sexo: validGenres!
  nacimiento: String!
}

input UpdatePacienteInput {
  nombre: String
  email: String
  telefono: String
  sexo: validGenres
  nacimiento: String
  id: ID!
}

input CreateCitaInput {
  motivo: String!
  fecha: String!
  horario: String!
  pacienteId: ID!
}

input UpdateCitaInput {
  motivo: String
  fecha: String
  horario: String
  pacienteId: ID
  id: ID!
}

input CreatePagoInput {
  cantidadRecibida: Float!
  monto: Float!
  tipoPago: paymentType!
  metodoPago: paymentMethod!
  citaId: ID!
}

input CreateAntropometricoInput {
  fecha: String!
  peso: Float!
  talla: Float!
  imc: Float!
  cintura: Float!
  cBrazo: Float!
  pTriceps: Float!
  pAbdominal: Float!
  porcentajeGrasa: String!
  pacienteId: ID!
}

input UpdateAntropometricoInput {
  fecha: String
  peso: Float
  talla: Float
  imc: Float
  cintura: Float
  cBrazo: Float
  pTriceps: Float
  pAbdominal: Float
  porcentajeGrasa: String
  pacienteId: ID
  id: ID!
}

input CreateLaboratorialInput {
  fecha: String!
  glucosa: Float!
  insulina: Float!
  trigliceridos: Float!
  colesterolTotal: Float!
  hdl: Float!
  ldl: Float!
  pacienteId: ID!
}

input UpdateLaboratorialInput {
  fecha: String
  glucosa: Float
  insulina: Float
  trigliceridos: Float
  colesterolTotal: Float
  hdl: Float
  ldl: Float
  pacienteId: ID
  id: ID!
}

input CreateHistorialInput {
  enfermedadesCardiovasculares: validResponse!
  enfermedadesPulmonares: validResponse!
  enfermedadesMetabolicas: validResponse!
  tabaquismo: validResponse!
  alcoholismo: validResponse!
  sedentarismo: validResponse!
  drogas: validResponse!
  cafe: validResponse!
  pacienteId: ID!
}

input UpdateHistorialInput {
  enfermedadesCardiovasculares: validResponse
  enfermedadesPulmonares: validResponse
  enfermedadesMetabolicas: validResponse
  tabaquismo: validResponse
  alcoholismo: validResponse
  sedentarismo: validResponse
  drogas: validResponse
  cafe: validResponse
  pacienteId: ID
  id: ID!
}

input UpdateProfileInput {
  nombre: String
  telefono: String
  email: String
  password: String
  rol: validRoles
}

input SignUpInput {
  nombre: String!
  telefono: String!
  email: String!
  password: String!
  rol: validRoles!
}

input SigninInput {
  email: String!
  password: String!
}